#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Licensing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TrustDB")]
	public partial class testDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_paystartdate(tbl_paystartdate instance);
    partial void Updatetbl_paystartdate(tbl_paystartdate instance);
    partial void Deletetbl_paystartdate(tbl_paystartdate instance);
    partial void Inserttbl_lkp_user(tbl_lkp_user instance);
    partial void Updatetbl_lkp_user(tbl_lkp_user instance);
    partial void Deletetbl_lkp_user(tbl_lkp_user instance);
    partial void Inserttbl_trust_detail(tbl_trust_detail instance);
    partial void Updatetbl_trust_detail(tbl_trust_detail instance);
    partial void Deletetbl_trust_detail(tbl_trust_detail instance);
    #endregion
		
		public testDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TrustDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public testDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public testDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_paystartdate> tbl_paystartdates
		{
			get
			{
				return this.GetTable<tbl_paystartdate>();
			}
		}
		
		public System.Data.Linq.Table<tbl_lkp_user> tbl_lkp_users
		{
			get
			{
				return this.GetTable<tbl_lkp_user>();
			}
		}
		
		public System.Data.Linq.Table<tbl_trust_detail> tbl_trust_details
		{
			get
			{
				return this.GetTable<tbl_trust_detail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_paystartdate")]
	public partial class tbl_paystartdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _year_id;
		
		private System.Nullable<int> _cmpid;
		
		private System.Nullable<long> _cur_year;
		
		private System.Nullable<System.DateTime> _start_dt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onyear_idChanging(int value);
    partial void Onyear_idChanged();
    partial void OncmpidChanging(System.Nullable<int> value);
    partial void OncmpidChanged();
    partial void Oncur_yearChanging(System.Nullable<long> value);
    partial void Oncur_yearChanged();
    partial void Onstart_dtChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dtChanged();
    #endregion
		
		public tbl_paystartdate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int year_id
		{
			get
			{
				return this._year_id;
			}
			set
			{
				if ((this._year_id != value))
				{
					this.Onyear_idChanging(value);
					this.SendPropertyChanging();
					this._year_id = value;
					this.SendPropertyChanged("year_id");
					this.Onyear_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmpid", DbType="Int")]
		public System.Nullable<int> cmpid
		{
			get
			{
				return this._cmpid;
			}
			set
			{
				if ((this._cmpid != value))
				{
					this.OncmpidChanging(value);
					this.SendPropertyChanging();
					this._cmpid = value;
					this.SendPropertyChanged("cmpid");
					this.OncmpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cur_year", DbType="BigInt")]
		public System.Nullable<long> cur_year
		{
			get
			{
				return this._cur_year;
			}
			set
			{
				if ((this._cur_year != value))
				{
					this.Oncur_yearChanging(value);
					this.SendPropertyChanging();
					this._cur_year = value;
					this.SendPropertyChanged("cur_year");
					this.Oncur_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_dt", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_dt
		{
			get
			{
				return this._start_dt;
			}
			set
			{
				if ((this._start_dt != value))
				{
					this.Onstart_dtChanging(value);
					this.SendPropertyChanging();
					this._start_dt = value;
					this.SendPropertyChanged("start_dt");
					this.Onstart_dtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_lkp_users")]
	public partial class tbl_lkp_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private System.Nullable<int> _Staff_ID;
		
		private string _UName;
		
		private string _Password;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<System.DateTime> _crtdt;
		
		private string _crtby;
		
		private string _modfby;
		
		private System.Nullable<System.DateTime> _modfdt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnStaff_IDChanging(System.Nullable<int> value);
    partial void OnStaff_IDChanged();
    partial void OnUNameChanging(string value);
    partial void OnUNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OncrtdtChanging(System.Nullable<System.DateTime> value);
    partial void OncrtdtChanged();
    partial void OncrtbyChanging(string value);
    partial void OncrtbyChanged();
    partial void OnmodfbyChanging(string value);
    partial void OnmodfbyChanged();
    partial void OnmodfdtChanging(System.Nullable<System.DateTime> value);
    partial void OnmodfdtChanged();
    #endregion
		
		public tbl_lkp_user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="Int")]
		public System.Nullable<int> Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UName", DbType="VarChar(50)")]
		public string UName
		{
			get
			{
				return this._UName;
			}
			set
			{
				if ((this._UName != value))
				{
					this.OnUNameChanging(value);
					this.SendPropertyChanging();
					this._UName = value;
					this.SendPropertyChanged("UName");
					this.OnUNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crtdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> crtdt
		{
			get
			{
				return this._crtdt;
			}
			set
			{
				if ((this._crtdt != value))
				{
					this.OncrtdtChanging(value);
					this.SendPropertyChanging();
					this._crtdt = value;
					this.SendPropertyChanged("crtdt");
					this.OncrtdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crtby", DbType="VarChar(50)")]
		public string crtby
		{
			get
			{
				return this._crtby;
			}
			set
			{
				if ((this._crtby != value))
				{
					this.OncrtbyChanging(value);
					this.SendPropertyChanging();
					this._crtby = value;
					this.SendPropertyChanged("crtby");
					this.OncrtbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modfby", DbType="VarChar(50)")]
		public string modfby
		{
			get
			{
				return this._modfby;
			}
			set
			{
				if ((this._modfby != value))
				{
					this.OnmodfbyChanging(value);
					this.SendPropertyChanging();
					this._modfby = value;
					this.SendPropertyChanged("modfby");
					this.OnmodfbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modfdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> modfdt
		{
			get
			{
				return this._modfdt;
			}
			set
			{
				if ((this._modfdt != value))
				{
					this.OnmodfdtChanging(value);
					this.SendPropertyChanging();
					this._modfdt = value;
					this.SendPropertyChanged("modfdt");
					this.OnmodfdtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_trust_details")]
	public partial class tbl_trust_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Trust_ID;
		
		private string _Name;
		
		private string _Trusttype;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _Pin;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Pan;
		
		private string _Nature;
		
		private string _Type;
		
		private string _Regon;
		
		private string _Regno;
		
		private string _nextrenewaldate;
		
		private string _State;
		
		private string _Region;
		
		private string _Minnof;
		
		private string _Maxnof;
		
		private string _nofmettings;
		
		private string _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrust_IDChanging(int value);
    partial void OnTrust_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTrusttypeChanging(string value);
    partial void OnTrusttypeChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPinChanging(string value);
    partial void OnPinChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPanChanging(string value);
    partial void OnPanChanged();
    partial void OnNatureChanging(string value);
    partial void OnNatureChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRegonChanging(string value);
    partial void OnRegonChanged();
    partial void OnRegnoChanging(string value);
    partial void OnRegnoChanged();
    partial void OnnextrenewaldateChanging(string value);
    partial void OnnextrenewaldateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnMinnofChanging(string value);
    partial void OnMinnofChanged();
    partial void OnMaxnofChanging(string value);
    partial void OnMaxnofChanged();
    partial void OnnofmettingsChanging(string value);
    partial void OnnofmettingsChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    #endregion
		
		public tbl_trust_detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trust_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Trust_ID
		{
			get
			{
				return this._Trust_ID;
			}
			set
			{
				if ((this._Trust_ID != value))
				{
					this.OnTrust_IDChanging(value);
					this.SendPropertyChanging();
					this._Trust_ID = value;
					this.SendPropertyChanged("Trust_ID");
					this.OnTrust_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trusttype", DbType="VarChar(50)")]
		public string Trusttype
		{
			get
			{
				return this._Trusttype;
			}
			set
			{
				if ((this._Trusttype != value))
				{
					this.OnTrusttypeChanging(value);
					this.SendPropertyChanging();
					this._Trusttype = value;
					this.SendPropertyChanged("Trusttype");
					this.OnTrusttypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="VarChar(50)")]
		public string Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pan", DbType="VarChar(50)")]
		public string Pan
		{
			get
			{
				return this._Pan;
			}
			set
			{
				if ((this._Pan != value))
				{
					this.OnPanChanging(value);
					this.SendPropertyChanging();
					this._Pan = value;
					this.SendPropertyChanged("Pan");
					this.OnPanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nature", DbType="VarChar(50)")]
		public string Nature
		{
			get
			{
				return this._Nature;
			}
			set
			{
				if ((this._Nature != value))
				{
					this.OnNatureChanging(value);
					this.SendPropertyChanging();
					this._Nature = value;
					this.SendPropertyChanged("Nature");
					this.OnNatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regon", DbType="VarChar(50)")]
		public string Regon
		{
			get
			{
				return this._Regon;
			}
			set
			{
				if ((this._Regon != value))
				{
					this.OnRegonChanging(value);
					this.SendPropertyChanging();
					this._Regon = value;
					this.SendPropertyChanged("Regon");
					this.OnRegonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regno", DbType="VarChar(50)")]
		public string Regno
		{
			get
			{
				return this._Regno;
			}
			set
			{
				if ((this._Regno != value))
				{
					this.OnRegnoChanging(value);
					this.SendPropertyChanging();
					this._Regno = value;
					this.SendPropertyChanged("Regno");
					this.OnRegnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nextrenewaldate", DbType="VarChar(50)")]
		public string nextrenewaldate
		{
			get
			{
				return this._nextrenewaldate;
			}
			set
			{
				if ((this._nextrenewaldate != value))
				{
					this.OnnextrenewaldateChanging(value);
					this.SendPropertyChanging();
					this._nextrenewaldate = value;
					this.SendPropertyChanged("nextrenewaldate");
					this.OnnextrenewaldateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minnof", DbType="VarChar(50)")]
		public string Minnof
		{
			get
			{
				return this._Minnof;
			}
			set
			{
				if ((this._Minnof != value))
				{
					this.OnMinnofChanging(value);
					this.SendPropertyChanging();
					this._Minnof = value;
					this.SendPropertyChanged("Minnof");
					this.OnMinnofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maxnof", DbType="VarChar(50)")]
		public string Maxnof
		{
			get
			{
				return this._Maxnof;
			}
			set
			{
				if ((this._Maxnof != value))
				{
					this.OnMaxnofChanging(value);
					this.SendPropertyChanging();
					this._Maxnof = value;
					this.SendPropertyChanged("Maxnof");
					this.OnMaxnofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nofmettings", DbType="VarChar(50)")]
		public string nofmettings
		{
			get
			{
				return this._nofmettings;
			}
			set
			{
				if ((this._nofmettings != value))
				{
					this.OnnofmettingsChanging(value);
					this.SendPropertyChanging();
					this._nofmettings = value;
					this.SendPropertyChanged("nofmettings");
					this.OnnofmettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="VarChar(50)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
