#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComplaintsTabLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ALBOP")]
	public partial class ComplaintsTabDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_lkp_data(tbl_lkp_data instance);
    partial void Updatetbl_lkp_data(tbl_lkp_data instance);
    partial void Deletetbl_lkp_data(tbl_lkp_data instance);
    partial void InsertTbL_Complaints_Summary(TbL_Complaints_Summary instance);
    partial void UpdateTbL_Complaints_Summary(TbL_Complaints_Summary instance);
    partial void DeleteTbL_Complaints_Summary(TbL_Complaints_Summary instance);
    partial void Inserttbl_lkp_table(tbl_lkp_table instance);
    partial void Updatetbl_lkp_table(tbl_lkp_table instance);
    partial void Deletetbl_lkp_table(tbl_lkp_table instance);
    partial void InsertTbL_Complaints_Conclusion(TbL_Complaints_Conclusion instance);
    partial void UpdateTbL_Complaints_Conclusion(TbL_Complaints_Conclusion instance);
    partial void DeleteTbL_Complaints_Conclusion(TbL_Complaints_Conclusion instance);
    partial void InsertTbL_Complaints_Investigatior(TbL_Complaints_Investigatior instance);
    partial void UpdateTbL_Complaints_Investigatior(TbL_Complaints_Investigatior instance);
    partial void DeleteTbL_Complaints_Investigatior(TbL_Complaints_Investigatior instance);
    partial void InsertTbL_Complaints_Relevant(TbL_Complaints_Relevant instance);
    partial void UpdateTbL_Complaints_Relevant(TbL_Complaints_Relevant instance);
    partial void DeleteTbL_Complaints_Relevant(TbL_Complaints_Relevant instance);
    partial void Inserttbl_Personresponsible_History(tbl_Personresponsible_History instance);
    partial void Updatetbl_Personresponsible_History(tbl_Personresponsible_History instance);
    partial void Deletetbl_Personresponsible_History(tbl_Personresponsible_History instance);
    partial void Inserttbl_ComplaintStatusChanged_History(tbl_ComplaintStatusChanged_History instance);
    partial void Updatetbl_ComplaintStatusChanged_History(tbl_ComplaintStatusChanged_History instance);
    partial void Deletetbl_ComplaintStatusChanged_History(tbl_ComplaintStatusChanged_History instance);
    partial void InsertTbL_Complaint(TbL_Complaint instance);
    partial void UpdateTbL_Complaint(TbL_Complaint instance);
    partial void DeleteTbL_Complaint(TbL_Complaint instance);
    #endregion
		
		public ComplaintsTabDataContext() :
                base(global::System.Configuration.ConfigurationSettings.AppSettings["Licensing_Con"].ToString(), mappingSource)
        {
			OnCreated();
		}
		
		public ComplaintsTabDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComplaintsTabDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComplaintsTabDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComplaintsTabDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_lkp_data> tbl_lkp_datas
		{
			get
			{
				return this.GetTable<tbl_lkp_data>();
			}
		}
		
		public System.Data.Linq.Table<TbL_Complaints_Summary> TbL_Complaints_Summaries
		{
			get
			{
				return this.GetTable<TbL_Complaints_Summary>();
			}
		}
		
		public System.Data.Linq.Table<tbl_lkp_table> tbl_lkp_tables
		{
			get
			{
				return this.GetTable<tbl_lkp_table>();
			}
		}
		
		public System.Data.Linq.Table<TbL_Complaints_Conclusion> TbL_Complaints_Conclusions
		{
			get
			{
				return this.GetTable<TbL_Complaints_Conclusion>();
			}
		}
		
		public System.Data.Linq.Table<TbL_Complaints_Investigatior> TbL_Complaints_Investigatiors
		{
			get
			{
				return this.GetTable<TbL_Complaints_Investigatior>();
			}
		}
		
		public System.Data.Linq.Table<TbL_Complaints_Relevant> TbL_Complaints_Relevants
		{
			get
			{
				return this.GetTable<TbL_Complaints_Relevant>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Personresponsible_History> tbl_Personresponsible_Histories
		{
			get
			{
				return this.GetTable<tbl_Personresponsible_History>();
			}
		}
		
		public System.Data.Linq.Table<tbl_ComplaintStatusChanged_History> tbl_ComplaintStatusChanged_Histories
		{
			get
			{
				return this.GetTable<tbl_ComplaintStatusChanged_History>();
			}
		}
		
		public System.Data.Linq.Table<TbL_Complaint> TbL_Complaints
		{
			get
			{
				return this.GetTable<TbL_Complaint>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Complaints_Update")]
		public int Complaints_Update(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Complaint_ID", DbType="Int")] System.Nullable<int> complaint_ID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Respondent_type", DbType="VarChar(50)")] string respondent_type, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Respondent_ID", DbType="Int")] System.Nullable<int> respondent_ID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Source_Id", DbType="VarChar(50)")] string source_Id, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category_Id", DbType="VarChar(50)")] string category_Id, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateReceived", DbType="VarChar(50)")] string dateReceived, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateDocketed", DbType="VarChar(50)")] string dateDocketed, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address1", DbType="VarChar(50)")] string address1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address2", DbType="VarChar(50)")] string address2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(50)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="VarChar(2)")] string state, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="VarChar(50)")] string zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonResponcible_ID", DbType="VarChar(50)")] string personResponcible_ID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string complaintType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvestiGator_ID", DbType="VarChar(50)")] string investiGator_ID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateInvestigatorAssigned", DbType="DateTime")] System.Nullable<System.DateTime> dateInvestigatorAssigned, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateInvestigatorReceived", DbType="DateTime")] System.Nullable<System.DateTime> dateInvestigatorReceived, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NurseConsultant", DbType="VarChar(50)")] string nurseConsultant, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Complaint_Status", DbType="VarChar(50)")] string complaint_Status, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> modifiedby, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> modifieddate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), complaint_ID, respondent_type, respondent_ID, source_Id, category_Id, dateReceived, dateDocketed, address1, address2, city, state, zip, personResponcible_ID, complaintType, investiGator_ID, dateInvestigatorAssigned, dateInvestigatorReceived, nurseConsultant, complaint_Status, modifiedby, modifieddate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_Licensing_GetComplaintDetailsForEdit")]
		public ISingleResult<USP_Licensing_GetComplaintDetailsForEditResult> USP_Licensing_GetComplaintDetailsForEdit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> comid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), comid);
			return ((ISingleResult<USP_Licensing_GetComplaintDetailsForEditResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_ComplaintsSummary")]
		public int USP_ComplaintsSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Flag", DbType="Int")] System.Nullable<int> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SummaryId", DbType="Int")] System.Nullable<int> summaryId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ComplaintId", DbType="Int")] System.Nullable<int> complaintId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SummaryText", DbType="Text")] string summaryText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedBy", DbType="Int")] System.Nullable<int> createdBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flag, summaryId, complaintId, summaryText, createdBy, createdDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_Complaints_ConclusionDetailsIUD")]
		public int USP_Complaints_ConclusionDetailsIUD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConclusionID", DbType="Int")] System.Nullable<int> conclusionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cmpid", DbType="Int")] System.Nullable<int> cmpid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConclusionViolationID", DbType="VarChar(50)")] string conclusionViolationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConclusionArea", DbType="Text")] string conclusionArea, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUser", DbType="Int")] System.Nullable<int> createdUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flag, conclusionID, cmpid, conclusionViolationID, conclusionArea, createdUser, createDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_Complaints_InvestigatiorDetailsIUD")]
		public int USP_Complaints_InvestigatiorDetailsIUD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cmp_Investigation_Id", DbType="Int")] System.Nullable<int> cmp_Investigation_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cmp_Id", DbType="Int")] System.Nullable<int> cmp_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JournalType", DbType="VarChar(50)")] string journalType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JournalEntry", DbType="VarChar(50)")] string journalEntry, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedDate", DbType="VarChar(50)")] string createdDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDrugDivisionChart", DbType="VarChar(50)")] string isDrugDivisionChart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPrescriptionProfileChart", DbType="VarChar(50)")] string isPrescriptionProfileChart, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvestigationComments", DbType="VarChar(5000)")] string investigationComments, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Modified_By", DbType="Int")] System.Nullable<int> modified_By, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Modified_Date", DbType="DateTime")] System.Nullable<System.DateTime> modified_Date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flag, cmp_Investigation_Id, cmp_Id, journalType, journalEntry, createdDate, isDrugDivisionChart, isPrescriptionProfileChart, investigationComments, modified_By, modified_Date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_Complaints_TbL_Complaints_RelevantIUD")]
		public int USP_Complaints_TbL_Complaints_RelevantIUD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RelevantHistoryID", DbType="Int")] System.Nullable<int> relevantHistoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cmpid", DbType="Int")] System.Nullable<int> cmpid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RelevantArea", DbType="Text")] string relevantArea, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedUser", DbType="Int")] System.Nullable<int> createdUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flag, relevantHistoryID, cmpid, relevantArea, createdUser, createdDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_GetPersonHis")]
		public ISingleResult<USP_GetPersonHisResult> USP_GetPersonHis([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string cmpid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cmpid);
			return ((ISingleResult<USP_GetPersonHisResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetComplaints")]
		public ISingleResult<GetComplaintsResult> GetComplaints([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Respondent_type", DbType="VarChar(50)")] string respondent_type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Respondent_ID", DbType="Int")] System.Nullable<int> respondent_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), respondent_type, respondent_ID);
			return ((ISingleResult<GetComplaintsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_lkp_data")]
	public partial class tbl_lkp_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Lkp_data_ID;
		
		private int _Lkp_tbl_ID;
		
		private int _Org_ID;
		
		private string _Values;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLkp_data_IDChanging(int value);
    partial void OnLkp_data_IDChanged();
    partial void OnLkp_tbl_IDChanging(int value);
    partial void OnLkp_tbl_IDChanged();
    partial void OnOrg_IDChanging(int value);
    partial void OnOrg_IDChanged();
    partial void OnValuesChanging(string value);
    partial void OnValuesChanged();
    #endregion
		
		public tbl_lkp_data()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lkp_data_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Lkp_data_ID
		{
			get
			{
				return this._Lkp_data_ID;
			}
			set
			{
				if ((this._Lkp_data_ID != value))
				{
					this.OnLkp_data_IDChanging(value);
					this.SendPropertyChanging();
					this._Lkp_data_ID = value;
					this.SendPropertyChanged("Lkp_data_ID");
					this.OnLkp_data_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lkp_tbl_ID", DbType="Int NOT NULL")]
		public int Lkp_tbl_ID
		{
			get
			{
				return this._Lkp_tbl_ID;
			}
			set
			{
				if ((this._Lkp_tbl_ID != value))
				{
					this.OnLkp_tbl_IDChanging(value);
					this.SendPropertyChanging();
					this._Lkp_tbl_ID = value;
					this.SendPropertyChanged("Lkp_tbl_ID");
					this.OnLkp_tbl_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Org_ID", DbType="Int NOT NULL")]
		public int Org_ID
		{
			get
			{
				return this._Org_ID;
			}
			set
			{
				if ((this._Org_ID != value))
				{
					this.OnOrg_IDChanging(value);
					this.SendPropertyChanging();
					this._Org_ID = value;
					this.SendPropertyChanged("Org_ID");
					this.OnOrg_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Values]", Storage="_Values", DbType="VarChar(500)")]
		public string Values
		{
			get
			{
				return this._Values;
			}
			set
			{
				if ((this._Values != value))
				{
					this.OnValuesChanging(value);
					this.SendPropertyChanging();
					this._Values = value;
					this.SendPropertyChanged("Values");
					this.OnValuesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbL_Complaints_Summary")]
	public partial class TbL_Complaints_Summary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SummaryComplaintID;
		
		private System.Nullable<int> _Cmpid;
		
		private string _SummaryArea;
		
		private System.Nullable<int> _CreateUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSummaryComplaintIDChanging(int value);
    partial void OnSummaryComplaintIDChanged();
    partial void OnCmpidChanging(System.Nullable<int> value);
    partial void OnCmpidChanged();
    partial void OnSummaryAreaChanging(string value);
    partial void OnSummaryAreaChanged();
    partial void OnCreateUserChanging(System.Nullable<int> value);
    partial void OnCreateUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TbL_Complaints_Summary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryComplaintID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SummaryComplaintID
		{
			get
			{
				return this._SummaryComplaintID;
			}
			set
			{
				if ((this._SummaryComplaintID != value))
				{
					this.OnSummaryComplaintIDChanging(value);
					this.SendPropertyChanging();
					this._SummaryComplaintID = value;
					this.SendPropertyChanged("SummaryComplaintID");
					this.OnSummaryComplaintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmpid", DbType="Int")]
		public System.Nullable<int> Cmpid
		{
			get
			{
				return this._Cmpid;
			}
			set
			{
				if ((this._Cmpid != value))
				{
					this.OnCmpidChanging(value);
					this.SendPropertyChanging();
					this._Cmpid = value;
					this.SendPropertyChanged("Cmpid");
					this.OnCmpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryArea", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SummaryArea
		{
			get
			{
				return this._SummaryArea;
			}
			set
			{
				if ((this._SummaryArea != value))
				{
					this.OnSummaryAreaChanging(value);
					this.SendPropertyChanging();
					this._SummaryArea = value;
					this.SendPropertyChanged("SummaryArea");
					this.OnSummaryAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="Int")]
		public System.Nullable<int> CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_lkp_tables")]
	public partial class tbl_lkp_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Lkp_tbl_ID;
		
		private string _Lkp_table_name;
		
		private int _Module_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLkp_tbl_IDChanging(int value);
    partial void OnLkp_tbl_IDChanged();
    partial void OnLkp_table_nameChanging(string value);
    partial void OnLkp_table_nameChanged();
    partial void OnModule_IDChanging(int value);
    partial void OnModule_IDChanged();
    #endregion
		
		public tbl_lkp_table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lkp_tbl_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Lkp_tbl_ID
		{
			get
			{
				return this._Lkp_tbl_ID;
			}
			set
			{
				if ((this._Lkp_tbl_ID != value))
				{
					this.OnLkp_tbl_IDChanging(value);
					this.SendPropertyChanging();
					this._Lkp_tbl_ID = value;
					this.SendPropertyChanged("Lkp_tbl_ID");
					this.OnLkp_tbl_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lkp_table_name", DbType="VarChar(50)")]
		public string Lkp_table_name
		{
			get
			{
				return this._Lkp_table_name;
			}
			set
			{
				if ((this._Lkp_table_name != value))
				{
					this.OnLkp_table_nameChanging(value);
					this.SendPropertyChanging();
					this._Lkp_table_name = value;
					this.SendPropertyChanged("Lkp_table_name");
					this.OnLkp_table_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module_ID", DbType="Int NOT NULL")]
		public int Module_ID
		{
			get
			{
				return this._Module_ID;
			}
			set
			{
				if ((this._Module_ID != value))
				{
					this.OnModule_IDChanging(value);
					this.SendPropertyChanging();
					this._Module_ID = value;
					this.SendPropertyChanged("Module_ID");
					this.OnModule_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbL_Complaints_Conclusion")]
	public partial class TbL_Complaints_Conclusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConclusionID;
		
		private System.Nullable<int> _Cmpid;
		
		private string _ConclusionViolationID;
		
		private string _ConclusionArea;
		
		private System.Nullable<int> _CreatedUser;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _modifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConclusionIDChanging(int value);
    partial void OnConclusionIDChanged();
    partial void OnCmpidChanging(System.Nullable<int> value);
    partial void OnCmpidChanged();
    partial void OnConclusionViolationIDChanging(string value);
    partial void OnConclusionViolationIDChanged();
    partial void OnConclusionAreaChanging(string value);
    partial void OnConclusionAreaChanged();
    partial void OnCreatedUserChanging(System.Nullable<int> value);
    partial void OnCreatedUserChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnmodifiedByChanging(System.Nullable<int> value);
    partial void OnmodifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TbL_Complaints_Conclusion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConclusionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConclusionID
		{
			get
			{
				return this._ConclusionID;
			}
			set
			{
				if ((this._ConclusionID != value))
				{
					this.OnConclusionIDChanging(value);
					this.SendPropertyChanging();
					this._ConclusionID = value;
					this.SendPropertyChanged("ConclusionID");
					this.OnConclusionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmpid", DbType="Int")]
		public System.Nullable<int> Cmpid
		{
			get
			{
				return this._Cmpid;
			}
			set
			{
				if ((this._Cmpid != value))
				{
					this.OnCmpidChanging(value);
					this.SendPropertyChanging();
					this._Cmpid = value;
					this.SendPropertyChanged("Cmpid");
					this.OnCmpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConclusionViolationID", DbType="VarChar(50)")]
		public string ConclusionViolationID
		{
			get
			{
				return this._ConclusionViolationID;
			}
			set
			{
				if ((this._ConclusionViolationID != value))
				{
					this.OnConclusionViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ConclusionViolationID = value;
					this.SendPropertyChanged("ConclusionViolationID");
					this.OnConclusionViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConclusionArea", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ConclusionArea
		{
			get
			{
				return this._ConclusionArea;
			}
			set
			{
				if ((this._ConclusionArea != value))
				{
					this.OnConclusionAreaChanging(value);
					this.SendPropertyChanging();
					this._ConclusionArea = value;
					this.SendPropertyChanged("ConclusionArea");
					this.OnConclusionAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUser", DbType="Int")]
		public System.Nullable<int> CreatedUser
		{
			get
			{
				return this._CreatedUser;
			}
			set
			{
				if ((this._CreatedUser != value))
				{
					this.OnCreatedUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedUser = value;
					this.SendPropertyChanged("CreatedUser");
					this.OnCreatedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifiedBy", DbType="Int")]
		public System.Nullable<int> modifiedBy
		{
			get
			{
				return this._modifiedBy;
			}
			set
			{
				if ((this._modifiedBy != value))
				{
					this.OnmodifiedByChanging(value);
					this.SendPropertyChanging();
					this._modifiedBy = value;
					this.SendPropertyChanged("modifiedBy");
					this.OnmodifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbL_Complaints_Investigatior")]
	public partial class TbL_Complaints_Investigatior : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cmp_Investigation_Id;
		
		private System.Nullable<int> _Cmp_Id;
		
		private string _IsDrugDivisionChart;
		
		private string _IsPrescriptionProfileChart;
		
		private string _InvestigationComments;
		
		private System.Nullable<int> _Modified_By;
		
		private System.Nullable<System.DateTime> _Modified_Date;
		
		private System.Nullable<int> _Create_User;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCmp_Investigation_IdChanging(int value);
    partial void OnCmp_Investigation_IdChanged();
    partial void OnCmp_IdChanging(System.Nullable<int> value);
    partial void OnCmp_IdChanged();
    partial void OnIsDrugDivisionChartChanging(string value);
    partial void OnIsDrugDivisionChartChanged();
    partial void OnIsPrescriptionProfileChartChanging(string value);
    partial void OnIsPrescriptionProfileChartChanged();
    partial void OnInvestigationCommentsChanging(string value);
    partial void OnInvestigationCommentsChanged();
    partial void OnModified_ByChanging(System.Nullable<int> value);
    partial void OnModified_ByChanged();
    partial void OnModified_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnModified_DateChanged();
    partial void OnCreate_UserChanging(System.Nullable<int> value);
    partial void OnCreate_UserChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    #endregion
		
		public TbL_Complaints_Investigatior()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmp_Investigation_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cmp_Investigation_Id
		{
			get
			{
				return this._Cmp_Investigation_Id;
			}
			set
			{
				if ((this._Cmp_Investigation_Id != value))
				{
					this.OnCmp_Investigation_IdChanging(value);
					this.SendPropertyChanging();
					this._Cmp_Investigation_Id = value;
					this.SendPropertyChanged("Cmp_Investigation_Id");
					this.OnCmp_Investigation_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmp_Id", DbType="Int")]
		public System.Nullable<int> Cmp_Id
		{
			get
			{
				return this._Cmp_Id;
			}
			set
			{
				if ((this._Cmp_Id != value))
				{
					this.OnCmp_IdChanging(value);
					this.SendPropertyChanging();
					this._Cmp_Id = value;
					this.SendPropertyChanged("Cmp_Id");
					this.OnCmp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDrugDivisionChart", DbType="VarChar(50)")]
		public string IsDrugDivisionChart
		{
			get
			{
				return this._IsDrugDivisionChart;
			}
			set
			{
				if ((this._IsDrugDivisionChart != value))
				{
					this.OnIsDrugDivisionChartChanging(value);
					this.SendPropertyChanging();
					this._IsDrugDivisionChart = value;
					this.SendPropertyChanged("IsDrugDivisionChart");
					this.OnIsDrugDivisionChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrescriptionProfileChart", DbType="VarChar(50)")]
		public string IsPrescriptionProfileChart
		{
			get
			{
				return this._IsPrescriptionProfileChart;
			}
			set
			{
				if ((this._IsPrescriptionProfileChart != value))
				{
					this.OnIsPrescriptionProfileChartChanging(value);
					this.SendPropertyChanging();
					this._IsPrescriptionProfileChart = value;
					this.SendPropertyChanged("IsPrescriptionProfileChart");
					this.OnIsPrescriptionProfileChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigationComments", DbType="VarChar(MAX)")]
		public string InvestigationComments
		{
			get
			{
				return this._InvestigationComments;
			}
			set
			{
				if ((this._InvestigationComments != value))
				{
					this.OnInvestigationCommentsChanging(value);
					this.SendPropertyChanging();
					this._InvestigationComments = value;
					this.SendPropertyChanged("InvestigationComments");
					this.OnInvestigationCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="Int")]
		public System.Nullable<int> Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modified_Date
		{
			get
			{
				return this._Modified_Date;
			}
			set
			{
				if ((this._Modified_Date != value))
				{
					this.OnModified_DateChanging(value);
					this.SendPropertyChanging();
					this._Modified_Date = value;
					this.SendPropertyChanged("Modified_Date");
					this.OnModified_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_User", DbType="Int")]
		public System.Nullable<int> Create_User
		{
			get
			{
				return this._Create_User;
			}
			set
			{
				if ((this._Create_User != value))
				{
					this.OnCreate_UserChanging(value);
					this.SendPropertyChanging();
					this._Create_User = value;
					this.SendPropertyChanged("Create_User");
					this.OnCreate_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbL_Complaints_Relevant")]
	public partial class TbL_Complaints_Relevant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelevantHistoryID;
		
		private string _Cmpid;
		
		private string _RelevantArea;
		
		private System.Nullable<int> _CreatedUser;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelevantHistoryIDChanging(int value);
    partial void OnRelevantHistoryIDChanged();
    partial void OnCmpidChanging(string value);
    partial void OnCmpidChanged();
    partial void OnRelevantAreaChanging(string value);
    partial void OnRelevantAreaChanged();
    partial void OnCreatedUserChanging(System.Nullable<int> value);
    partial void OnCreatedUserChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TbL_Complaints_Relevant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelevantHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelevantHistoryID
		{
			get
			{
				return this._RelevantHistoryID;
			}
			set
			{
				if ((this._RelevantHistoryID != value))
				{
					this.OnRelevantHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._RelevantHistoryID = value;
					this.SendPropertyChanged("RelevantHistoryID");
					this.OnRelevantHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cmpid", DbType="NChar(10)")]
		public string Cmpid
		{
			get
			{
				return this._Cmpid;
			}
			set
			{
				if ((this._Cmpid != value))
				{
					this.OnCmpidChanging(value);
					this.SendPropertyChanging();
					this._Cmpid = value;
					this.SendPropertyChanged("Cmpid");
					this.OnCmpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelevantArea", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string RelevantArea
		{
			get
			{
				return this._RelevantArea;
			}
			set
			{
				if ((this._RelevantArea != value))
				{
					this.OnRelevantAreaChanging(value);
					this.SendPropertyChanging();
					this._RelevantArea = value;
					this.SendPropertyChanged("RelevantArea");
					this.OnRelevantAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUser", DbType="Int")]
		public System.Nullable<int> CreatedUser
		{
			get
			{
				return this._CreatedUser;
			}
			set
			{
				if ((this._CreatedUser != value))
				{
					this.OnCreatedUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedUser = value;
					this.SendPropertyChanged("CreatedUser");
					this.OnCreatedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Personresponsible_History")]
	public partial class tbl_Personresponsible_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Person_his_id;
		
		private System.Nullable<int> _Complaint_id;
		
		private System.Nullable<int> _Old_person;
		
		private System.Nullable<int> _New_Person;
		
		private System.Nullable<int> _Changedby;
		
		private System.Nullable<System.DateTime> _Changeddt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerson_his_idChanging(int value);
    partial void OnPerson_his_idChanged();
    partial void OnComplaint_idChanging(System.Nullable<int> value);
    partial void OnComplaint_idChanged();
    partial void OnOld_personChanging(System.Nullable<int> value);
    partial void OnOld_personChanged();
    partial void OnNew_PersonChanging(System.Nullable<int> value);
    partial void OnNew_PersonChanged();
    partial void OnChangedbyChanging(System.Nullable<int> value);
    partial void OnChangedbyChanged();
    partial void OnChangeddtChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeddtChanged();
    #endregion
		
		public tbl_Personresponsible_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_his_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Person_his_id
		{
			get
			{
				return this._Person_his_id;
			}
			set
			{
				if ((this._Person_his_id != value))
				{
					this.OnPerson_his_idChanging(value);
					this.SendPropertyChanging();
					this._Person_his_id = value;
					this.SendPropertyChanged("Person_his_id");
					this.OnPerson_his_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_id", DbType="Int")]
		public System.Nullable<int> Complaint_id
		{
			get
			{
				return this._Complaint_id;
			}
			set
			{
				if ((this._Complaint_id != value))
				{
					this.OnComplaint_idChanging(value);
					this.SendPropertyChanging();
					this._Complaint_id = value;
					this.SendPropertyChanged("Complaint_id");
					this.OnComplaint_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Old_person", DbType="Int")]
		public System.Nullable<int> Old_person
		{
			get
			{
				return this._Old_person;
			}
			set
			{
				if ((this._Old_person != value))
				{
					this.OnOld_personChanging(value);
					this.SendPropertyChanging();
					this._Old_person = value;
					this.SendPropertyChanged("Old_person");
					this.OnOld_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New_Person", DbType="Int")]
		public System.Nullable<int> New_Person
		{
			get
			{
				return this._New_Person;
			}
			set
			{
				if ((this._New_Person != value))
				{
					this.OnNew_PersonChanging(value);
					this.SendPropertyChanging();
					this._New_Person = value;
					this.SendPropertyChanged("New_Person");
					this.OnNew_PersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changedby", DbType="Int")]
		public System.Nullable<int> Changedby
		{
			get
			{
				return this._Changedby;
			}
			set
			{
				if ((this._Changedby != value))
				{
					this.OnChangedbyChanging(value);
					this.SendPropertyChanging();
					this._Changedby = value;
					this.SendPropertyChanged("Changedby");
					this.OnChangedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changeddt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Changeddt
		{
			get
			{
				return this._Changeddt;
			}
			set
			{
				if ((this._Changeddt != value))
				{
					this.OnChangeddtChanging(value);
					this.SendPropertyChanging();
					this._Changeddt = value;
					this.SendPropertyChanged("Changeddt");
					this.OnChangeddtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ComplaintStatusChanged_History")]
	public partial class tbl_ComplaintStatusChanged_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComplaintStatus_ID;
		
		private System.Nullable<int> _Complaint_ID;
		
		private string _Complaint_Number;
		
		private System.Nullable<int> _Person_ID;
		
		private string _Old_Status;
		
		private string _New_Status;
		
		private System.Nullable<System.DateTime> _Date_Status_Changed;
		
		private string _Modify_By;
		
		private System.Nullable<System.DateTime> _Modify_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComplaintStatus_IDChanging(int value);
    partial void OnComplaintStatus_IDChanged();
    partial void OnComplaint_IDChanging(System.Nullable<int> value);
    partial void OnComplaint_IDChanged();
    partial void OnComplaint_NumberChanging(string value);
    partial void OnComplaint_NumberChanged();
    partial void OnPerson_IDChanging(System.Nullable<int> value);
    partial void OnPerson_IDChanged();
    partial void OnOld_StatusChanging(string value);
    partial void OnOld_StatusChanged();
    partial void OnNew_StatusChanging(string value);
    partial void OnNew_StatusChanged();
    partial void OnDate_Status_ChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_Status_ChangedChanged();
    partial void OnModify_ByChanging(string value);
    partial void OnModify_ByChanged();
    partial void OnModify_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnModify_DateChanged();
    #endregion
		
		public tbl_ComplaintStatusChanged_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintStatus_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComplaintStatus_ID
		{
			get
			{
				return this._ComplaintStatus_ID;
			}
			set
			{
				if ((this._ComplaintStatus_ID != value))
				{
					this.OnComplaintStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._ComplaintStatus_ID = value;
					this.SendPropertyChanged("ComplaintStatus_ID");
					this.OnComplaintStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_ID", DbType="Int")]
		public System.Nullable<int> Complaint_ID
		{
			get
			{
				return this._Complaint_ID;
			}
			set
			{
				if ((this._Complaint_ID != value))
				{
					this.OnComplaint_IDChanging(value);
					this.SendPropertyChanging();
					this._Complaint_ID = value;
					this.SendPropertyChanged("Complaint_ID");
					this.OnComplaint_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Number", DbType="VarChar(50)")]
		public string Complaint_Number
		{
			get
			{
				return this._Complaint_Number;
			}
			set
			{
				if ((this._Complaint_Number != value))
				{
					this.OnComplaint_NumberChanging(value);
					this.SendPropertyChanging();
					this._Complaint_Number = value;
					this.SendPropertyChanged("Complaint_Number");
					this.OnComplaint_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_ID", DbType="Int")]
		public System.Nullable<int> Person_ID
		{
			get
			{
				return this._Person_ID;
			}
			set
			{
				if ((this._Person_ID != value))
				{
					this.OnPerson_IDChanging(value);
					this.SendPropertyChanging();
					this._Person_ID = value;
					this.SendPropertyChanged("Person_ID");
					this.OnPerson_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Old_Status", DbType="VarChar(50)")]
		public string Old_Status
		{
			get
			{
				return this._Old_Status;
			}
			set
			{
				if ((this._Old_Status != value))
				{
					this.OnOld_StatusChanging(value);
					this.SendPropertyChanging();
					this._Old_Status = value;
					this.SendPropertyChanged("Old_Status");
					this.OnOld_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New_Status", DbType="VarChar(50)")]
		public string New_Status
		{
			get
			{
				return this._New_Status;
			}
			set
			{
				if ((this._New_Status != value))
				{
					this.OnNew_StatusChanging(value);
					this.SendPropertyChanging();
					this._New_Status = value;
					this.SendPropertyChanged("New_Status");
					this.OnNew_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Status_Changed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Status_Changed
		{
			get
			{
				return this._Date_Status_Changed;
			}
			set
			{
				if ((this._Date_Status_Changed != value))
				{
					this.OnDate_Status_ChangedChanging(value);
					this.SendPropertyChanging();
					this._Date_Status_Changed = value;
					this.SendPropertyChanged("Date_Status_Changed");
					this.OnDate_Status_ChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modify_By", DbType="VarChar(50)")]
		public string Modify_By
		{
			get
			{
				return this._Modify_By;
			}
			set
			{
				if ((this._Modify_By != value))
				{
					this.OnModify_ByChanging(value);
					this.SendPropertyChanging();
					this._Modify_By = value;
					this.SendPropertyChanged("Modify_By");
					this.OnModify_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modify_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Modify_Date
		{
			get
			{
				return this._Modify_Date;
			}
			set
			{
				if ((this._Modify_Date != value))
				{
					this.OnModify_DateChanging(value);
					this.SendPropertyChanging();
					this._Modify_Date = value;
					this.SendPropertyChanged("Modify_Date");
					this.OnModify_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbL_Complaints")]
	public partial class TbL_Complaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Complaint_ID;
		
		private string _Respondent_type;
		
		private System.Nullable<int> _Respondent_ID;
		
		private string _Complaint_Number;
		
		private string _Source_Id;
		
		private string _Category_Id;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private System.Nullable<System.DateTime> _DateDocketed;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _PersonResponcible_ID;
		
		private string _ComplaintType;
		
		private string _InvestiGator_ID;
		
		private System.Nullable<System.DateTime> _DateInvestigatorAssigned;
		
		private System.Nullable<System.DateTime> _DateInvestigatorReceived;
		
		private string _Consultant;
		
		private string _CompanionCase_ID;
		
		private string _Compainant;
		
		private string _Complaint_Status;
		
		private string _check_number;
		
		private System.Nullable<int> _modifiedby;
		
		private System.Nullable<System.DateTime> _modifieddate;
		
		private System.Nullable<int> _Create_User;
		
		private System.Nullable<System.DateTime> _Create_Date;
		
		private System.Nullable<System.DateTime> _DateInvestigationComplete;
		
		private string _invg_status;
		
		private string _SecondInvestigatiorID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComplaint_IDChanging(int value);
    partial void OnComplaint_IDChanged();
    partial void OnRespondent_typeChanging(string value);
    partial void OnRespondent_typeChanged();
    partial void OnRespondent_IDChanging(System.Nullable<int> value);
    partial void OnRespondent_IDChanged();
    partial void OnComplaint_NumberChanging(string value);
    partial void OnComplaint_NumberChanged();
    partial void OnSource_IdChanging(string value);
    partial void OnSource_IdChanged();
    partial void OnCategory_IdChanging(string value);
    partial void OnCategory_IdChanged();
    partial void OnDateReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReceivedChanged();
    partial void OnDateDocketedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDocketedChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPersonResponcible_IDChanging(string value);
    partial void OnPersonResponcible_IDChanged();
    partial void OnComplaintTypeChanging(string value);
    partial void OnComplaintTypeChanged();
    partial void OnInvestiGator_IDChanging(string value);
    partial void OnInvestiGator_IDChanged();
    partial void OnDateInvestigatorAssignedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInvestigatorAssignedChanged();
    partial void OnDateInvestigatorReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInvestigatorReceivedChanged();
    partial void OnConsultantChanging(string value);
    partial void OnConsultantChanged();
    partial void OnCompanionCase_IDChanging(string value);
    partial void OnCompanionCase_IDChanged();
    partial void OnCompainantChanging(string value);
    partial void OnCompainantChanged();
    partial void OnComplaint_StatusChanging(string value);
    partial void OnComplaint_StatusChanged();
    partial void Oncheck_numberChanging(string value);
    partial void Oncheck_numberChanged();
    partial void OnmodifiedbyChanging(System.Nullable<int> value);
    partial void OnmodifiedbyChanged();
    partial void OnmodifieddateChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifieddateChanged();
    partial void OnCreate_UserChanging(System.Nullable<int> value);
    partial void OnCreate_UserChanged();
    partial void OnCreate_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreate_DateChanged();
    partial void OnDateInvestigationCompleteChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInvestigationCompleteChanged();
    partial void Oninvg_statusChanging(string value);
    partial void Oninvg_statusChanged();
    partial void OnSecondInvestigatiorIDChanging(string value);
    partial void OnSecondInvestigatiorIDChanged();
    #endregion
		
		public TbL_Complaint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Complaint_ID
		{
			get
			{
				return this._Complaint_ID;
			}
			set
			{
				if ((this._Complaint_ID != value))
				{
					this.OnComplaint_IDChanging(value);
					this.SendPropertyChanging();
					this._Complaint_ID = value;
					this.SendPropertyChanged("Complaint_ID");
					this.OnComplaint_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent_type", DbType="VarChar(50)")]
		public string Respondent_type
		{
			get
			{
				return this._Respondent_type;
			}
			set
			{
				if ((this._Respondent_type != value))
				{
					this.OnRespondent_typeChanging(value);
					this.SendPropertyChanging();
					this._Respondent_type = value;
					this.SendPropertyChanged("Respondent_type");
					this.OnRespondent_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent_ID", DbType="Int")]
		public System.Nullable<int> Respondent_ID
		{
			get
			{
				return this._Respondent_ID;
			}
			set
			{
				if ((this._Respondent_ID != value))
				{
					this.OnRespondent_IDChanging(value);
					this.SendPropertyChanging();
					this._Respondent_ID = value;
					this.SendPropertyChanged("Respondent_ID");
					this.OnRespondent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Number", DbType="VarChar(50)")]
		public string Complaint_Number
		{
			get
			{
				return this._Complaint_Number;
			}
			set
			{
				if ((this._Complaint_Number != value))
				{
					this.OnComplaint_NumberChanging(value);
					this.SendPropertyChanging();
					this._Complaint_Number = value;
					this.SendPropertyChanged("Complaint_Number");
					this.OnComplaint_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_Id", DbType="VarChar(50)")]
		public string Source_Id
		{
			get
			{
				return this._Source_Id;
			}
			set
			{
				if ((this._Source_Id != value))
				{
					this.OnSource_IdChanging(value);
					this.SendPropertyChanging();
					this._Source_Id = value;
					this.SendPropertyChanged("Source_Id");
					this.OnSource_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", DbType="VarChar(50)")]
		public string Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					this.OnCategory_IdChanging(value);
					this.SendPropertyChanging();
					this._Category_Id = value;
					this.SendPropertyChanged("Category_Id");
					this.OnCategory_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDocketed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDocketed
		{
			get
			{
				return this._DateDocketed;
			}
			set
			{
				if ((this._DateDocketed != value))
				{
					this.OnDateDocketedChanging(value);
					this.SendPropertyChanging();
					this._DateDocketed = value;
					this.SendPropertyChanged("DateDocketed");
					this.OnDateDocketedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonResponcible_ID", DbType="VarChar(50)")]
		public string PersonResponcible_ID
		{
			get
			{
				return this._PersonResponcible_ID;
			}
			set
			{
				if ((this._PersonResponcible_ID != value))
				{
					this.OnPersonResponcible_IDChanging(value);
					this.SendPropertyChanging();
					this._PersonResponcible_ID = value;
					this.SendPropertyChanged("PersonResponcible_ID");
					this.OnPersonResponcible_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintType", DbType="VarChar(50)")]
		public string ComplaintType
		{
			get
			{
				return this._ComplaintType;
			}
			set
			{
				if ((this._ComplaintType != value))
				{
					this.OnComplaintTypeChanging(value);
					this.SendPropertyChanging();
					this._ComplaintType = value;
					this.SendPropertyChanged("ComplaintType");
					this.OnComplaintTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestiGator_ID", DbType="VarChar(50)")]
		public string InvestiGator_ID
		{
			get
			{
				return this._InvestiGator_ID;
			}
			set
			{
				if ((this._InvestiGator_ID != value))
				{
					this.OnInvestiGator_IDChanging(value);
					this.SendPropertyChanging();
					this._InvestiGator_ID = value;
					this.SendPropertyChanged("InvestiGator_ID");
					this.OnInvestiGator_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigatorAssigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigatorAssigned
		{
			get
			{
				return this._DateInvestigatorAssigned;
			}
			set
			{
				if ((this._DateInvestigatorAssigned != value))
				{
					this.OnDateInvestigatorAssignedChanging(value);
					this.SendPropertyChanging();
					this._DateInvestigatorAssigned = value;
					this.SendPropertyChanged("DateInvestigatorAssigned");
					this.OnDateInvestigatorAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigatorReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigatorReceived
		{
			get
			{
				return this._DateInvestigatorReceived;
			}
			set
			{
				if ((this._DateInvestigatorReceived != value))
				{
					this.OnDateInvestigatorReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateInvestigatorReceived = value;
					this.SendPropertyChanged("DateInvestigatorReceived");
					this.OnDateInvestigatorReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant", DbType="VarChar(50)")]
		public string Consultant
		{
			get
			{
				return this._Consultant;
			}
			set
			{
				if ((this._Consultant != value))
				{
					this.OnConsultantChanging(value);
					this.SendPropertyChanging();
					this._Consultant = value;
					this.SendPropertyChanged("Consultant");
					this.OnConsultantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanionCase_ID", DbType="VarChar(50)")]
		public string CompanionCase_ID
		{
			get
			{
				return this._CompanionCase_ID;
			}
			set
			{
				if ((this._CompanionCase_ID != value))
				{
					this.OnCompanionCase_IDChanging(value);
					this.SendPropertyChanging();
					this._CompanionCase_ID = value;
					this.SendPropertyChanged("CompanionCase_ID");
					this.OnCompanionCase_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compainant", DbType="VarChar(500)")]
		public string Compainant
		{
			get
			{
				return this._Compainant;
			}
			set
			{
				if ((this._Compainant != value))
				{
					this.OnCompainantChanging(value);
					this.SendPropertyChanging();
					this._Compainant = value;
					this.SendPropertyChanged("Compainant");
					this.OnCompainantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Status", DbType="VarChar(50)")]
		public string Complaint_Status
		{
			get
			{
				return this._Complaint_Status;
			}
			set
			{
				if ((this._Complaint_Status != value))
				{
					this.OnComplaint_StatusChanging(value);
					this.SendPropertyChanging();
					this._Complaint_Status = value;
					this.SendPropertyChanged("Complaint_Status");
					this.OnComplaint_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_number", DbType="VarChar(50)")]
		public string check_number
		{
			get
			{
				return this._check_number;
			}
			set
			{
				if ((this._check_number != value))
				{
					this.Oncheck_numberChanging(value);
					this.SendPropertyChanging();
					this._check_number = value;
					this.SendPropertyChanged("check_number");
					this.Oncheck_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifiedby", DbType="Int")]
		public System.Nullable<int> modifiedby
		{
			get
			{
				return this._modifiedby;
			}
			set
			{
				if ((this._modifiedby != value))
				{
					this.OnmodifiedbyChanging(value);
					this.SendPropertyChanging();
					this._modifiedby = value;
					this.SendPropertyChanged("modifiedby");
					this.OnmodifiedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifieddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> modifieddate
		{
			get
			{
				return this._modifieddate;
			}
			set
			{
				if ((this._modifieddate != value))
				{
					this.OnmodifieddateChanging(value);
					this.SendPropertyChanging();
					this._modifieddate = value;
					this.SendPropertyChanged("modifieddate");
					this.OnmodifieddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_User", DbType="Int")]
		public System.Nullable<int> Create_User
		{
			get
			{
				return this._Create_User;
			}
			set
			{
				if ((this._Create_User != value))
				{
					this.OnCreate_UserChanging(value);
					this.SendPropertyChanging();
					this._Create_User = value;
					this.SendPropertyChanged("Create_User");
					this.OnCreate_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Create_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Create_Date
		{
			get
			{
				return this._Create_Date;
			}
			set
			{
				if ((this._Create_Date != value))
				{
					this.OnCreate_DateChanging(value);
					this.SendPropertyChanging();
					this._Create_Date = value;
					this.SendPropertyChanged("Create_Date");
					this.OnCreate_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigationComplete", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigationComplete
		{
			get
			{
				return this._DateInvestigationComplete;
			}
			set
			{
				if ((this._DateInvestigationComplete != value))
				{
					this.OnDateInvestigationCompleteChanging(value);
					this.SendPropertyChanging();
					this._DateInvestigationComplete = value;
					this.SendPropertyChanged("DateInvestigationComplete");
					this.OnDateInvestigationCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invg_status", DbType="VarChar(500)")]
		public string invg_status
		{
			get
			{
				return this._invg_status;
			}
			set
			{
				if ((this._invg_status != value))
				{
					this.Oninvg_statusChanging(value);
					this.SendPropertyChanging();
					this._invg_status = value;
					this.SendPropertyChanged("invg_status");
					this.Oninvg_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondInvestigatiorID", DbType="VarChar(50)")]
		public string SecondInvestigatiorID
		{
			get
			{
				return this._SecondInvestigatiorID;
			}
			set
			{
				if ((this._SecondInvestigatiorID != value))
				{
					this.OnSecondInvestigatiorIDChanging(value);
					this.SendPropertyChanging();
					this._SecondInvestigatiorID = value;
					this.SendPropertyChanged("SecondInvestigatiorID");
					this.OnSecondInvestigatiorIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class USP_Licensing_GetComplaintDetailsForEditResult
	{
		
		private int _Complaint_ID;
		
		private string _Complaint_Number;
		
		private string _Respondent_type;
		
		private System.Nullable<int> _Respondent_ID;
		
		private string _Complaint_Number1;
		
		private string _Email;
		
		private string _Source_Desc;
		
		private string _Category;
		
		private string _Complaint_Status;
		
		private string _DateReceived;
		
		private System.Nullable<System.DateTime> _DateDocketed;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _PersonResponcible_ID;
		
		private string _complaintType;
		
		private string _Investigator;
		
		private string _CompanionCase_ID;
		
		private int _Complaint_ID1;
		
		private System.Nullable<System.DateTime> _DateInvestigatorAssigned;
		
		private System.Nullable<System.DateTime> _DateInvestigatorReceived;
		
		private string _Nurse_Consultant;
		
		private string _check_number;
		
		public USP_Licensing_GetComplaintDetailsForEditResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_ID", DbType="Int NOT NULL")]
		public int Complaint_ID
		{
			get
			{
				return this._Complaint_ID;
			}
			set
			{
				if ((this._Complaint_ID != value))
				{
					this._Complaint_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Number", DbType="VarChar(50)")]
		public string Complaint_Number
		{
			get
			{
				return this._Complaint_Number;
			}
			set
			{
				if ((this._Complaint_Number != value))
				{
					this._Complaint_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent_type", DbType="VarChar(50)")]
		public string Respondent_type
		{
			get
			{
				return this._Respondent_type;
			}
			set
			{
				if ((this._Respondent_type != value))
				{
					this._Respondent_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent_ID", DbType="Int")]
		public System.Nullable<int> Respondent_ID
		{
			get
			{
				return this._Respondent_ID;
			}
			set
			{
				if ((this._Respondent_ID != value))
				{
					this._Respondent_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Number1", DbType="VarChar(50)")]
		public string Complaint_Number1
		{
			get
			{
				return this._Complaint_Number1;
			}
			set
			{
				if ((this._Complaint_Number1 != value))
				{
					this._Complaint_Number1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_Desc", DbType="VarChar(500)")]
		public string Source_Desc
		{
			get
			{
				return this._Source_Desc;
			}
			set
			{
				if ((this._Source_Desc != value))
				{
					this._Source_Desc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(500)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Status", DbType="VarChar(50)")]
		public string Complaint_Status
		{
			get
			{
				return this._Complaint_Status;
			}
			set
			{
				if ((this._Complaint_Status != value))
				{
					this._Complaint_Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="VarChar(20)")]
		public string DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this._DateReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDocketed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDocketed
		{
			get
			{
				return this._DateDocketed;
			}
			set
			{
				if ((this._DateDocketed != value))
				{
					this._DateDocketed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonResponcible_ID", DbType="VarChar(101) NOT NULL", CanBeNull=false)]
		public string PersonResponcible_ID
		{
			get
			{
				return this._PersonResponcible_ID;
			}
			set
			{
				if ((this._PersonResponcible_ID != value))
				{
					this._PersonResponcible_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_complaintType", DbType="VarChar(50)")]
		public string complaintType
		{
			get
			{
				return this._complaintType;
			}
			set
			{
				if ((this._complaintType != value))
				{
					this._complaintType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Investigator", DbType="VarChar(500)")]
		public string Investigator
		{
			get
			{
				return this._Investigator;
			}
			set
			{
				if ((this._Investigator != value))
				{
					this._Investigator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanionCase_ID", DbType="VarChar(50)")]
		public string CompanionCase_ID
		{
			get
			{
				return this._CompanionCase_ID;
			}
			set
			{
				if ((this._CompanionCase_ID != value))
				{
					this._CompanionCase_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_ID1", DbType="Int NOT NULL")]
		public int Complaint_ID1
		{
			get
			{
				return this._Complaint_ID1;
			}
			set
			{
				if ((this._Complaint_ID1 != value))
				{
					this._Complaint_ID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigatorAssigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigatorAssigned
		{
			get
			{
				return this._DateInvestigatorAssigned;
			}
			set
			{
				if ((this._DateInvestigatorAssigned != value))
				{
					this._DateInvestigatorAssigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigatorReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigatorReceived
		{
			get
			{
				return this._DateInvestigatorReceived;
			}
			set
			{
				if ((this._DateInvestigatorReceived != value))
				{
					this._DateInvestigatorReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nurse_Consultant", DbType="VarChar(500)")]
		public string Nurse_Consultant
		{
			get
			{
				return this._Nurse_Consultant;
			}
			set
			{
				if ((this._Nurse_Consultant != value))
				{
					this._Nurse_Consultant = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_number", DbType="VarChar(50)")]
		public string check_number
		{
			get
			{
				return this._check_number;
			}
			set
			{
				if ((this._check_number != value))
				{
					this._check_number = value;
				}
			}
		}
	}
	
	public partial class USP_GetPersonHisResult
	{
		
		private int _Person_his_id;
		
		private string _Old;
		
		private string _New;
		
		private string _chby;
		
		private System.Nullable<System.DateTime> _Changeddt;
		
		public USP_GetPersonHisResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_his_id", DbType="Int NOT NULL")]
		public int Person_his_id
		{
			get
			{
				return this._Person_his_id;
			}
			set
			{
				if ((this._Person_his_id != value))
				{
					this._Person_his_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Old", DbType="VarChar(101) NOT NULL", CanBeNull=false)]
		public string Old
		{
			get
			{
				return this._Old;
			}
			set
			{
				if ((this._Old != value))
				{
					this._Old = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New", DbType="VarChar(101) NOT NULL", CanBeNull=false)]
		public string New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this._New = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chby", DbType="VarChar(101) NOT NULL", CanBeNull=false)]
		public string chby
		{
			get
			{
				return this._chby;
			}
			set
			{
				if ((this._chby != value))
				{
					this._chby = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Changeddt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Changeddt
		{
			get
			{
				return this._Changeddt;
			}
			set
			{
				if ((this._Changeddt != value))
				{
					this._Changeddt = value;
				}
			}
		}
	}
	
	public partial class GetComplaintsResult
	{
		
		private int _Complaint_ID;
		
		private string _Respondent_type;
		
		private System.Nullable<int> _Respondent_ID;
		
		private string _Complaint_Number;
		
		private string _Source_Id;
		
		private string _Category_Id;
		
		private System.Nullable<System.DateTime> _DateReceived;
		
		private System.Nullable<System.DateTime> _DateDocketed;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _PersonResponcible_ID;
		
		private string _ComplaintType;
		
		private string _InvestiGator_ID;
		
		private System.Nullable<System.DateTime> _DateInvestigatorAssigned;
		
		private System.Nullable<System.DateTime> _DateInvestigatorReceived;
		
		private string _Consultant;
		
		private string _CompanionCase_ID;
		
		private string _Complaint_Status;
		
		private string _check_number;
		
		private string _SourceDescription;
		
		private string _Responsible;
		
		private System.Nullable<int> _id;
		
		private string _CategoryDescription;
		
		private string _Resolutions;
		
		private string _Board_Action;
		
		private string _ComplainantName;
		
		public GetComplaintsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_ID", DbType="Int NOT NULL")]
		public int Complaint_ID
		{
			get
			{
				return this._Complaint_ID;
			}
			set
			{
				if ((this._Complaint_ID != value))
				{
					this._Complaint_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent_type", DbType="VarChar(50)")]
		public string Respondent_type
		{
			get
			{
				return this._Respondent_type;
			}
			set
			{
				if ((this._Respondent_type != value))
				{
					this._Respondent_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent_ID", DbType="Int")]
		public System.Nullable<int> Respondent_ID
		{
			get
			{
				return this._Respondent_ID;
			}
			set
			{
				if ((this._Respondent_ID != value))
				{
					this._Respondent_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Number", DbType="VarChar(50)")]
		public string Complaint_Number
		{
			get
			{
				return this._Complaint_Number;
			}
			set
			{
				if ((this._Complaint_Number != value))
				{
					this._Complaint_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source_Id", DbType="VarChar(50)")]
		public string Source_Id
		{
			get
			{
				return this._Source_Id;
			}
			set
			{
				if ((this._Source_Id != value))
				{
					this._Source_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Id", DbType="VarChar(50)")]
		public string Category_Id
		{
			get
			{
				return this._Category_Id;
			}
			set
			{
				if ((this._Category_Id != value))
				{
					this._Category_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this._DateReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDocketed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDocketed
		{
			get
			{
				return this._DateDocketed;
			}
			set
			{
				if ((this._DateDocketed != value))
				{
					this._DateDocketed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonResponcible_ID", DbType="VarChar(50)")]
		public string PersonResponcible_ID
		{
			get
			{
				return this._PersonResponcible_ID;
			}
			set
			{
				if ((this._PersonResponcible_ID != value))
				{
					this._PersonResponcible_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplaintType", DbType="VarChar(50)")]
		public string ComplaintType
		{
			get
			{
				return this._ComplaintType;
			}
			set
			{
				if ((this._ComplaintType != value))
				{
					this._ComplaintType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestiGator_ID", DbType="VarChar(50)")]
		public string InvestiGator_ID
		{
			get
			{
				return this._InvestiGator_ID;
			}
			set
			{
				if ((this._InvestiGator_ID != value))
				{
					this._InvestiGator_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigatorAssigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigatorAssigned
		{
			get
			{
				return this._DateInvestigatorAssigned;
			}
			set
			{
				if ((this._DateInvestigatorAssigned != value))
				{
					this._DateInvestigatorAssigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInvestigatorReceived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInvestigatorReceived
		{
			get
			{
				return this._DateInvestigatorReceived;
			}
			set
			{
				if ((this._DateInvestigatorReceived != value))
				{
					this._DateInvestigatorReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consultant", DbType="VarChar(50)")]
		public string Consultant
		{
			get
			{
				return this._Consultant;
			}
			set
			{
				if ((this._Consultant != value))
				{
					this._Consultant = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanionCase_ID", DbType="VarChar(50)")]
		public string CompanionCase_ID
		{
			get
			{
				return this._CompanionCase_ID;
			}
			set
			{
				if ((this._CompanionCase_ID != value))
				{
					this._CompanionCase_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complaint_Status", DbType="VarChar(500)")]
		public string Complaint_Status
		{
			get
			{
				return this._Complaint_Status;
			}
			set
			{
				if ((this._Complaint_Status != value))
				{
					this._Complaint_Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_number", DbType="VarChar(50)")]
		public string check_number
		{
			get
			{
				return this._check_number;
			}
			set
			{
				if ((this._check_number != value))
				{
					this._check_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDescription", DbType="VarChar(500)")]
		public string SourceDescription
		{
			get
			{
				return this._SourceDescription;
			}
			set
			{
				if ((this._SourceDescription != value))
				{
					this._SourceDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="VarChar(101) NOT NULL", CanBeNull=false)]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this._Responsible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="VarChar(500)")]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this._CategoryDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolutions", DbType="VarChar(500)")]
		public string Resolutions
		{
			get
			{
				return this._Resolutions;
			}
			set
			{
				if ((this._Resolutions != value))
				{
					this._Resolutions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Board_Action", DbType="VarChar(500)")]
		public string Board_Action
		{
			get
			{
				return this._Board_Action;
			}
			set
			{
				if ((this._Board_Action != value))
				{
					this._Board_Action = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplainantName", DbType="VarChar(1502)")]
		public string ComplainantName
		{
			get
			{
				return this._ComplainantName;
			}
			set
			{
				if ((this._ComplainantName != value))
				{
					this._ComplainantName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
